<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.calc.web.mapper.CalcMapper">
    <resultMap type="com.calc.web.model.Calc" id="BaseResultMap">
        <result column="id" property="id" jdbcType="BIGINT"/>
        <result column="shop_id" property="shopId" jdbcType="BIGINT"/>
        <result column="exp" property="exp" jdbcType="BIGINT"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="nums" property="nums" jdbcType="VARCHAR"/>
        <result column="calc_text" property="calcText" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="short_date" property="shortDate" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="create_user" property="createUser" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="update_user" property="updateUser" jdbcType="VARCHAR"/>
        <result column="version" property="version" jdbcType="INTEGER"/>
        <result column="is_enable" property="isEnable" jdbcType="BIT"/>

    </resultMap>

    <sql id="Base_Column_List">
	    `id`, `shop_id`, `exp`, `type`, `nums`, `content`, `calc_text`, `state`, `remark`, `short_date`, `create_time`, `create_user`, `update_time`, `update_user`, `version`, `is_enable`
    </sql>

    <select id="getList" resultMap="BaseResultMap" parameterType="com.calc.web.model.Calc">
        select
        <include refid="Base_Column_List"/>
        from ts_calc t
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="id != null">
                AND t.id = #{id}
            </if>
            <!--            <if test="shopId != null">-->
            <!--                AND t.shop_id = #{shopId}-->
            <!--            </if>-->
            AND t.`is_enable` = 1
        </trim>
        ORDER BY t.`id` DESC
    </select>

    <select id="get" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM ts_calc t
        WHERE t.`id` = #{id}
    </select>

    <insert id="insert" parameterType="com.calc.web.model.Calc" useGeneratedKeys="true" keyProperty="id">
        insert into ts_calc (<include refid="Base_Column_List"/>)
        VALUES
        (
        #{id},
        #{shopId},
        #{exp},
        #{type},
        #{nums},
        #{content},
        #{calcText},
        #{state},
        #{remark},
        #{shortDate},
        #{createTime},
        #{createUser},
        #{updateTime},
        #{updateUser},
        #{version},
        #{isEnable}
        )
    </insert>

    <insert id="insertList" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        insert into ts_calc (<include refid="Base_Column_List"/>)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.id},
            #{item.shopId},
            #{item.exp},
            #{item.type},
            #{item.nums},
            #{item.content},
            #{item.calcText},
            #{item.state},
            #{item.remark},
            #{item.shortDate},
            #{item.createTime},
            #{item.createUser},
            #{item.updateTime},
            #{item.updateUser},
            #{item.version},
            #{item.isEnable}
            )
        </foreach>
    </insert>

    <!--    <select id="pageList" resultMap="BaseResultMap" parameterType="com.wya.web.model.calculation">-->
    <!--        select <include refid="Base_Column_List" />-->
    <!--        from tm_calculation t-->
    <!--        <trim prefix="WHERE" prefixOverrides="AND | OR" >-->
    <!--            <if test="userId != null">-->
    <!--                AND t.user_id = #{userId}-->
    <!--            </if>-->
    <!--            <if test="id != null">-->
    <!--                AND t.calculation_id = #{id}-->
    <!--            </if>-->
    <!--        </trim>-->
    <!--        ORDER BY t.calculation_id DESC-->
    <!--        LIMIT #{offset}, #{pagesize}-->
    <!--    </select>-->

    <!--    <select id="pageListCount" parameterType="java.util.HashMap" resultType="int">-->
    <!--        SELECT count(1)-->
    <!--        FROM XXL_JOB_QRTZ_TRIGGER_INFO AS t-->
    <!--        <trim prefix="WHERE" prefixOverrides="AND | OR" >-->
    <!--            <if test="jobGroup gt 0">-->
    <!--                AND t.job_group = #{jobGroup}-->
    <!--            </if>-->
    <!--            <if test="executorHandler != null and executorHandler != ''">-->
    <!--                AND t.executor_handler like CONCAT(CONCAT('%', #{executorHandler}), '%')-->
    <!--            </if>-->
    <!--        </trim>-->
    <!--    </select>-->

    <!--    <insert id="save" parameterType="com.xxl.job.admin.core.model.XxlJobInfo" useGeneratedKeys="true" keyProperty="id" >-->
    <!--        INSERT INTO XXL_JOB_QRTZ_TRIGGER_INFO (-->
    <!--        job_group,-->
    <!--        job_cron,-->
    <!--        job_desc,-->
    <!--        add_time,-->
    <!--        update_time,-->
    <!--        author,-->
    <!--        alarm_email,-->
    <!--        executor_route_strategy,-->
    <!--        executor_handler,-->
    <!--        executor_param,-->
    <!--        executor_block_strategy,-->
    <!--        executor_fail_strategy,-->
    <!--        glue_type,-->
    <!--        glue_source,-->
    <!--        glue_remark,-->
    <!--        glue_updatetime,-->
    <!--        child_jobkey-->
    <!--        ) VALUES (-->
    <!--        #{jobGroup},-->
    <!--        #{jobCron},-->
    <!--        #{jobDesc},-->
    <!--        NOW(),-->
    <!--        NOW(),-->
    <!--        #{author},-->
    <!--        #{alarmEmail},-->
    <!--        #{executorRouteStrategy},-->
    <!--        #{executorHandler},-->
    <!--        #{executorParam},-->
    <!--        #{executorBlockStrategy},-->
    <!--        #{executorFailStrategy},-->
    <!--        #{glueType},-->
    <!--        #{glueSource},-->
    <!--        #{glueRemark},-->
    <!--        NOW(),-->
    <!--        #{childJobKey}-->
    <!--        );-->
    <!--        &lt;!&ndash;<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">-->
    <!--            SELECT LAST_INSERT_ID()-->
    <!--            /*SELECT @@IDENTITY AS id*/-->
    <!--        </selectKey>&ndash;&gt;-->
    <!--    </insert>-->

    <!--    <select id="loadById" parameterType="java.util.HashMap" resultMap="XxlJobInfo">-->
    <!--        SELECT <include refid="Base_Column_List" />-->
    <!--        FROM XXL_JOB_QRTZ_TRIGGER_INFO AS t-->
    <!--        WHERE t.id = #{id}-->
    <!--    </select>-->

    <!--    <update id="update" parameterType="com.xxl.job.admin.core.model.XxlJobInfo" >-->
    <!--		UPDATE XXL_JOB_QRTZ_TRIGGER_INFO-->
    <!--		SET-->
    <!--			job_cron = #{jobCron},-->
    <!--			job_desc = #{jobDesc},-->
    <!--			update_time = NOW(),-->
    <!--			author = #{author},-->
    <!--			alarm_email = #{alarmEmail},-->
    <!--			executor_route_strategy = #{executorRouteStrategy},-->
    <!--			executor_handler = #{executorHandler},-->
    <!--			executor_param = #{executorParam},-->
    <!--			executor_block_strategy = #{executorBlockStrategy},-->
    <!--			executor_fail_strategy = #{executorFailStrategy},-->
    <!--			glue_type = #{glueType},-->
    <!--			glue_source = #{glueSource},-->
    <!--			glue_remark = #{glueRemark},-->
    <!--			glue_updatetime = #{glueUpdatetime},-->
    <!--			child_jobkey = #{childJobKey}-->
    <!--		WHERE id = #{id}-->
    <!--	</update>-->

    <!--    <delete id="delete" parameterType="java.util.HashMap">-->
    <!--		DELETE-->
    <!--		FROM XXL_JOB_QRTZ_TRIGGER_INFO-->
    <!--		WHERE id = #{id}-->
    <!--	</delete>-->

    <!--    <select id="getJobsByGroup" parameterType="java.util.HashMap" resultMap="XxlJobInfo">-->
    <!--        SELECT <include refid="Base_Column_List" />-->
    <!--        FROM XXL_JOB_QRTZ_TRIGGER_INFO AS t-->
    <!--        WHERE t.job_group = #{jobGroup}-->
    <!--    </select>-->

    <!--    <select id="findAllCount" resultType="int">-->
    <!--		SELECT count(1)-->
    <!--		FROM XXL_JOB_QRTZ_TRIGGER_INFO-->
    <!--	</select>-->

</mapper>